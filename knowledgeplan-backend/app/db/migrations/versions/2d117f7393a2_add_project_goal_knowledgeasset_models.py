"""Add Project, Goal, KnowledgeAsset models

Revision ID: 2d117f7393a2
Revises: 016f196dbf5a
Create Date: 2025-04-19 17:24:44.018323

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '2d117f7393a2'
down_revision: Union[str, None] = '016f196dbf5a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('goals',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('type', sa.Enum('ENTERPRISE', 'DEPARTMENT', 'TEAM', 'INDIVIDUAL', name='goaltypeenum'), nullable=False),
    sa.Column('parent_id', sa.UUID(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('progress', sa.Integer(), nullable=True),
    sa.Column('due_date', sa.Date(), nullable=True),
    sa.Column('properties', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['parent_id'], ['goals.id'], name=op.f('fk_goals_parent_id_goals')),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], name=op.f('fk_goals_tenant_id_tenants')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_goals'))
    )
    op.create_index(op.f('ix_goals_parent_id'), 'goals', ['parent_id'], unique=False)
    op.create_index(op.f('ix_goals_tenant_id'), 'goals', ['tenant_id'], unique=False)
    op.create_index(op.f('ix_goals_title'), 'goals', ['title'], unique=False)
    op.create_index(op.f('ix_goals_type'), 'goals', ['type'], unique=False)
    op.create_table('projects',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('owning_team_id', sa.UUID(), nullable=True),
    sa.Column('goal_id', sa.UUID(), nullable=True),
    sa.Column('properties', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['goal_id'], ['goals.id'], name=op.f('fk_projects_goal_id_goals')),
    sa.ForeignKeyConstraint(['owning_team_id'], ['teams.id'], name=op.f('fk_projects_owning_team_id_teams')),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], name=op.f('fk_projects_tenant_id_tenants')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_projects'))
    )
    op.create_index(op.f('ix_projects_goal_id'), 'projects', ['goal_id'], unique=False)
    op.create_index(op.f('ix_projects_name'), 'projects', ['name'], unique=False)
    op.create_index(op.f('ix_projects_owning_team_id'), 'projects', ['owning_team_id'], unique=False)
    op.create_index(op.f('ix_projects_tenant_id'), 'projects', ['tenant_id'], unique=False)
    op.create_table('knowledge_assets',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=True),
    sa.Column('type', sa.Enum('NOTE', 'DOCUMENT', 'MESSAGE', 'MEETING', name='knowledgeassettypeenum'), nullable=False),
    sa.Column('source', sa.String(length=100), nullable=True),
    sa.Column('link', sa.Text(), nullable=True),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('project_id', sa.UUID(), nullable=True),
    sa.Column('created_by_user_id', sa.UUID(), nullable=True),
    sa.Column('properties', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['created_by_user_id'], ['users.id'], name=op.f('fk_knowledge_assets_created_by_user_id_users')),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], name=op.f('fk_knowledge_assets_project_id_projects')),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], name=op.f('fk_knowledge_assets_tenant_id_tenants')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_knowledge_assets'))
    )
    op.create_index(op.f('ix_knowledge_assets_created_by_user_id'), 'knowledge_assets', ['created_by_user_id'], unique=False)
    op.create_index(op.f('ix_knowledge_assets_project_id'), 'knowledge_assets', ['project_id'], unique=False)
    op.create_index(op.f('ix_knowledge_assets_tenant_id'), 'knowledge_assets', ['tenant_id'], unique=False)
    op.create_index(op.f('ix_knowledge_assets_title'), 'knowledge_assets', ['title'], unique=False)
    op.create_index(op.f('ix_knowledge_assets_type'), 'knowledge_assets', ['type'], unique=False)
    op.add_column('teams', sa.Column('lead_id', sa.UUID(), nullable=True))
    op.alter_column('teams', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               nullable=False,
               existing_server_default=sa.text('now()'))
    
    # Update existing NULL updated_at values
    op.execute('UPDATE teams SET updated_at = NOW() WHERE updated_at IS NULL')
    # Explicitly commit the update before altering schema
    op.execute('COMMIT') 

    # Alter type separately first
    op.alter_column('teams', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime() 
               # Removed nullable=False here
               )
               
    # Now set NOT NULL in a separate execute call
    op.execute('ALTER TABLE teams ALTER COLUMN updated_at SET NOT NULL')
    # Start a new transaction block if necessary (depends on how alembic/psycopg handles this)
    op.execute('BEGIN') 

    op.create_index(op.f('ix_teams_lead_id'), 'teams', ['lead_id'], unique=False)
    op.create_index(op.f('ix_teams_tenant_id'), 'teams', ['tenant_id'], unique=False)
    op.create_foreign_key(op.f('fk_teams_lead_id_users'), 'teams', 'users', ['lead_id'], ['id'])
    op.drop_index('ix_tenants_name', table_name='tenants')
    op.create_index(op.f('ix_tenants_name'), 'tenants', ['name'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_tenants_name'), table_name='tenants')
    op.create_index('ix_tenants_name', 'tenants', ['name'], unique=False)
    op.drop_constraint(op.f('fk_teams_lead_id_users'), 'teams', type_='foreignkey')
    op.drop_index(op.f('ix_teams_tenant_id'), table_name='teams')
    op.drop_index(op.f('ix_teams_lead_id'), table_name='teams')
    op.alter_column('teams', 'updated_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               nullable=True)
    op.alter_column('teams', 'created_at',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.drop_column('teams', 'lead_id')
    op.drop_index(op.f('ix_knowledge_assets_type'), table_name='knowledge_assets')
    op.drop_index(op.f('ix_knowledge_assets_title'), table_name='knowledge_assets')
    op.drop_index(op.f('ix_knowledge_assets_tenant_id'), table_name='knowledge_assets')
    op.drop_index(op.f('ix_knowledge_assets_project_id'), table_name='knowledge_assets')
    op.drop_index(op.f('ix_knowledge_assets_created_by_user_id'), table_name='knowledge_assets')
    op.drop_table('knowledge_assets')
    op.drop_index(op.f('ix_projects_tenant_id'), table_name='projects')
    op.drop_index(op.f('ix_projects_owning_team_id'), table_name='projects')
    op.drop_index(op.f('ix_projects_name'), table_name='projects')
    op.drop_index(op.f('ix_projects_goal_id'), table_name='projects')
    op.drop_table('projects')
    op.drop_index(op.f('ix_goals_type'), table_name='goals')
    op.drop_index(op.f('ix_goals_title'), table_name='goals')
    op.drop_index(op.f('ix_goals_tenant_id'), table_name='goals')
    op.drop_index(op.f('ix_goals_parent_id'), table_name='goals')
    op.drop_table('goals')
    # ### end Alembic commands ###
